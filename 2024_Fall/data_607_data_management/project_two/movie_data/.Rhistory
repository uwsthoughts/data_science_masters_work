install.packages("httr")
install.packages("jsonlite")
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(jsonlite)
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(jsonlite)
nyt_secret <- "78PXT3Q3rjxmEvlK"
bestie_calling <- function(date, list_name = "hardcover-fiction") {
nyt_webs <- "https://api.nytimes.com/svc/books/v3/lists/"
requestigator <- paste0(nyt_webs, date, "/", list_name, ".json?api-key=", api_key)
response <- GET(requestigator)
if (status_code(response) == 200) {
content <- content(response, "text")
json_data <- fromJSON(content, flatten = TRUE)
booker <- as.data.frame(json_data$results$books)
booker$date <- date
return(booker)
} else {
message("No data for: ", date)
return(NULL)
}
}
birth_year <- 1991
eternals <- format(Sys.Date(), "%Y")
sun_circles <- seq.Date(as.Date("1991-03-13"), as.Date(paste0(eternals, "-03-13")), by = "year")
nerd_rage <- do.call(rbind, lapply(sun_circles, function(date) {
bestie_calling(format(date, "%Y-%m-%d"))
}))
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(jsonlite)
nyt_secret <- "78PXT3Q3rjxmEvlK"
bestie_calling <- function(date, list_name = "hardcover-fiction") {
nyt_webs <- "https://api.nytimes.com/svc/books/v3/lists/"
requestigator <- paste0(nyt_webs, date, "/", list_name, ".json?api-key=", nyt_secret)
response <- GET(requestigator)
if (status_code(response) == 200) {
content <- content(response, "text")
json_data <- fromJSON(content, flatten = TRUE)
booker <- as.data.frame(json_data$results$books)
booker$date <- date
return(booker)
} else {
message("No data for: ", date)
return(NULL)
}
}
birth_year <- 1991
eternals <- format(Sys.Date(), "%Y")
sun_circles <- seq.Date(as.Date("1991-03-13"), as.Date(paste0(eternals, "-03-13")), by = "year")
nerd_rage <- do.call(rbind, lapply(sun_circles, function(date) {
bestie_calling(format(date, "%Y-%m-%d"))
}))
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(jsonlite)
nyt_secret <- "78PXT3Q3rjxmEvlK"
fashionista <- function(section = "style") {
vanity_fair <- "https://api.timedwire.com/v1/articles"
vogue <- paste0(vanity_fair, "?section=", section, "&api-key=", nyt_secret)
gucci <- GET(vogue)
if (status_code(gucci) == 200) {
looks <- looks(gucci, "text")
makeup <- fromJSON(looks, flatten = TRUE)
thoughts <- as.data.frame(makeup$results)
return(thoughts)
} else {
message("Sad face. Nothing available.")
return(NULL)
}
}
style_thoughts <- fashionista("style")
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(jsonlite)
nyt_secret <- "78PXT3Q3rjxmEvlK"
fashionista <- function(section = "style") {
vanity_fair <- "https://api.nytimes.com/svc/news/v3/content/nyt/"
vogue <- paste0(vanity_fair, section, ".json?api-key=", nyt_secret)
gucci <- GET(vogue)
if (status_code(gucci) == 200) {
looks <- looks(gucci, "text")
makeup <- fromJSON(looks, flatten = TRUE)
thoughts <- as.data.frame(makeup$results)
return(thoughts)
} else {
message("Sad face. Nothing available.")
return(NULL)
}
}
style_thoughts <- fashionista("style")
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(jsonlite)
nyt_secret <- "78PXT3Q3rjxmEvlK"
test_api_connection <- function() {
test_url <- paste0("https://api.nytimes.com/svc/news/v3/content/nyt/style.json?api-key=", nyt_secret)
# Make the GET request
response <- GET(test_url)
# Check the status code
if (status_code(response) == 200) {
message("API connection successful!")
} else {
message("Failed to connect to the API. Status code: ", status_code(response))
}
}
test_api_connection()
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(jsonlite)
nyt_key <- "OzpAn8RHbLFGfUWDBCVG0VSinrza92RW"
test_api_connection <- function() {
test_url <- paste0("https://api.nytimes.com/svc/news/v3/content/nyt/style.json?api-key=", nyt_key)
# Make the GET request
response <- GET(test_url)
# Check the status code
if (status_code(response) == 200) {
message("API connection successful!")
} else {
message("Failed to connect to the API. Status code: ", status_code(response))
}
}
test_api_connection()
fashionista <- function(section = "style") {
vanity_fair <- "https://api.nytimes.com/svc/news/v3/content/nyt/"
vogue <- paste0(vanity_fair, section, ".json?api-key=", nyt_key)
gucci <- GET(vogue)
if (status_code(gucci) == 200) {
looks <- looks(gucci, "text")
makeup <- fromJSON(looks, flatten = TRUE)
thoughts <- as.data.frame(makeup$results)
return(thoughts)
} else {
message("Sad face. Nothing available.")
return(NULL)
}
}
style_thoughts <- fashionista("style")
fashionista <- function(section = "style") {
vanity_fair <- "https://api.nytimes.com/svc/news/v3/content/nyt/"
vogue <- paste0(vanity_fair, section, ".json?api-key=", nyt_key)
gucci <- GET(vogue)
if (status_code(gucci) == 200) {
looks <- content(gucci, "text")
makeup <- fromJSON(looks, flatten = TRUE)
thoughts <- as.data.frame(makeup$results)
return(thoughts)
} else {
message("Sad face. Nothing available.")
return(NULL)
}
}
style_thoughts <- fashionista("style")
View(style_thoughts)
library(httr)
library(jsonlite)
library(tidyverse)
colnames(style_thoughts)
fresh_looks <- style_thoughts[, c("published_date", "byline", "title", "abstract")]
fresh_looks$published_date <- as.Date(fresh_looks$published_date)
fresh_looks
fresh_looks <- style_thoughts[, c("published_date", "byline", "title", "abstract")]
fresh_looks$published_date <- as.Date(fresh_looks$published_date)
fresh_looks <- as_tibble(fresh_looks)
fresh_looks
fresh_looks
