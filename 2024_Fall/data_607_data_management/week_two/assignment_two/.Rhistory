library(tidyr)
library(dplyr)
delays_csv <- "https://storage.googleapis.com/data_science_masters_files/2024_fall/data_607_data_management/week_five_files/flight_delays.csv"
delays_df <- read_csv(url(delays_csv))
library(tidyverse)
delays_csv <- "https://storage.googleapis.com/data_science_masters_files/2024_fall/data_607_data_management/week_five_files/flight_delays.csv"
delays_df <- read_csv(url(delays_csv))
View(delays_df)
# Read the CSV file
delays_csv <- "https://storage.googleapis.com/data_science_masters_files/2024_fall/data_607_data_management/week_five_files/flight_delays.csv"
delays_df <- read_csv(delays_csv, col_names = FALSE)
# If the above doesn't work, try this alternative:
# delays_df <- read_csv(delays_csv, col_names = FALSE, col_types = cols(.default = "c"))
# Rename the columns
colnames(delays_df) <- c("Airline", "Status", "Los_Angeles", "Phoenix", "San_Diego", "San_Francisco", "Seattle")
library(tidyverse)
library(dplyr)
delays_csv <- "https://storage.googleapis.com/data_science_masters_files/2024_fall/data_607_data_management/week_five_files/flight_delays.csv"
delays_df <- read_csv(url(delays_csv))
View(delays_df)
library(tidyverse)
library(dplyr)
delays_csv <- "https://storage.googleapis.com/data_science_masters_files/2024_fall/data_607_data_management/week_five_files/flight_delays.csv"
delays_csv_raw <- read_csv(url(delays_csv), col_names = FALSE)
delays_df <- delays_csv_raw %>%
separate(X1, into = c("Airline", "Status", "Los_Angeles", "Phoenix", "San_Diego", "San_Francisco", "Seattle"), sep = ",")
View(delays_df)
delays_df %>%
pivot_longer(cols = -c(Airline, Status),
names_to = "Destination",
values_to = "Flights") %>%
pivot_wider(names_from = Status, values_from = Flights) %>%
mutate(total_flights = `on time` + delayed,
delay_rate = delayed / total_flights)
delays_df %>%
pivot_longer(cols = -c(Airline, Status),
names_to = "Destination",
values_to = "Flights") %>%
pivot_wider(names_from = Status, values_from = Flights) %>%
mutate(`on time` = as.numeric(`on time`),
delayed = as.numeric(delayed),
total_flights = `on time` + delayed,
delay_rate = delayed / total_flights)
View(delays_df)
delays_df <- delays_df %>%
pivot_longer(cols = -c(Airline, Status),
names_to = "Destination",
values_to = "Flights") %>%
pivot_wider(names_from = Status, values_from = Flights) %>%
mutate(`on time` = as.numeric(`on time`),
delayed = as.numeric(delayed),
total_flights = `on time` + delayed,
delay_rate = delayed / total_flights)
View(delays_df)
library(tidyverse)
library(dplyr)
delays_csv <- "https://storage.googleapis.com/data_science_masters_files/2024_fall/data_607_data_management/week_five_files/flight_delays.csv"
delays_csv_raw <- read_csv(url(delays_csv), col_names = FALSE)
delays_df <- delays_csv_raw %>%
separate(X1, into = c("Airline", "Status", "Los_Angeles", "Phoenix", "San_Diego", "San_Francisco", "Seattle"), sep = ",")
delays_tidy <- delays_df %>%
pivot_longer(cols = -c(Airline, Status),
names_to = "Destination",
values_to = "Flights") %>%
pivot_wider(names_from = Status, values_from = Flights) %>%
mutate(`on time` = as.numeric(`on time`),
delayed = as.numeric(delayed),
total_flights = `on time` + delayed,
delay_rate = delayed / total_flights)
View(delays_tidy)
View(delays_csv_raw)
library(tidyverse)
library(dplyr)
delays_csv <- "https://storage.googleapis.com/data_science_masters_files/2024_fall/data_607_data_management/week_five_files/flight_delays.csv"
delays_csv_raw <- read_csv(url(delays_csv))
View(delays_csv_raw)
delays_csv <- "https://storage.googleapis.com/data_science_masters_files/2024_fall/data_607_data_management/week_five_files/flight_delays.csv"
delays_csv_raw <- read_csv(delays_csv)
View(delays_csv_raw)
delays_split<- delays_csv_raw %>%
separate(column_name, into = c('Airline','Status','Los Angeles','Phoenix','San Diego','San Francisco','Seattle'), sep = ",")
colnames(delays_csv_raw) <- unlist(delays_csv_raw[1,])  # Set the first row as column headers
delays_csv_raw <- delays_csv_raw[-1,]
delays_split<- delays_csv_raw %>%
separate(column_name, into = c('Airline','Status','Los Angeles','Phoenix','San Diego','San Francisco','Seattle'), sep = ",")
colnames(delays_csv_raw) <- unlist(delays_csv_raw[1,])  # Set the first row as column headers
delays_csv_raw <- delays_csv_raw[-1,]
delays_split<- delays_csv_raw %>%
mutate(across(c(`Los Angeles`, Phoenix, `San Diego`, `San Francisco`, Seattle), as.numeric))
colnames(delays_csv_raw) <- unlist(delays_csv_raw[1,])  # Set the first row as column headers
delays_csv_raw <- delays_csv_raw[-1,]
delays_split<- delays_csv_raw %>%
mutate(across(c('Los Angeles', 'Phoenix', 'San Diego', 'San Francisco', 'Seattle'), as.numeric))
View(delays_csv_raw)
delays_csv <- "https://storage.googleapis.com/data_science_masters_files/2024_fall/data_607_data_management/week_five_files/flight_delays.csv"
delays_csv_raw <- read_csv(delays_csv, col_names = FALSE)
View(delays_csv_raw)
colnames(delays_csv_raw) <- unlist(delays_csv_raw[1,])
View(delays_csv_raw)
View(delays_csv_raw)
library(tidyverse)
library(dplyr)
delays_csv <- "https://storage.googleapis.com/data_science_masters_files/2024_fall/data_607_data_management/week_five_files/flight_delays.csv"
delays_csv_raw <- read_csv(delays_csv, col_names = FALSE)
delays_split<- delays_csv_raw %>%
mutate(across(c('Airline', 'Status','Los Angeles', 'Phoenix', 'San Diego', 'San Francisco', 'Seattle'), as.numeric))
View(delays_csv_raw)
library(tidyverse)
library(dplyr)
delays_csv <- "https://storage.googleapis.com/data_science_masters_files/2024_fall/data_607_data_management/week_five_files/flight_delays.csv"
delays_csv_raw <- read_csv(delays_csv)
delays_split<- delays_csv_raw %>%
mutate(across(c('Airline', 'Status','Los Angeles', 'Phoenix', 'San Diego', 'San Francisco', 'Seattle'), as.numeric))
View(delays_csv_raw)
delays_csv <- "https://storage.googleapis.com/data_science_masters_files/2024_fall/data_607_data_management/week_five_files/flight_delays.csv"
delays_csv_raw <- read_csv(delays_csv)
# Ensure that only the relevant city columns are converted to numeric
delays_split <- delays_csv_raw %>%
mutate(across(c('Los Angeles', 'Phoenix', 'San Diego', 'San Francisco', 'Seattle'), as.numeric))
View(delays_csv_raw)
delays_csv_df %>% separate_wider_delim(delays_csv_raw, ",", names = c('Airline','Status','Los Angeles','Phoenix','San Diego','San Francisco','Seattle'))
delays_csv_raw %>% separate_wider_delim(delays_csv_raw, ",", names = c('Airline','Status','Los Angeles','Phoenix','San Diego','San Francisco','Seattle'))
View(delays_csv_raw)
delays_split <- delays_csv_raw %>%
separate(col = your_column_name, into = c('Airline','Status','Los Angeles','Phoenix','San Diego','San Francisco','Seattle'), sep = ",")
delays_split <- delays_csv_raw %>%
separate(col = 'Airline,Status,Los Angeles,Phoenix,San Diego,San Francisco,Seattle', into = c('Airline','Status','Los Angeles','Phoenix','San Diego','San Francisco','Seattle'), sep = ",")
View(delays_split)
View(delays_split)
delays_summary <- delays_split %>%
pivot_longer(cols = c('Los Angeles', 'Phoenix', 'San Diego', 'San Francisco', 'Seattle'),
names_to = "City", values_to = "Delay") %>%
group_by(Airline, Status) %>%
summarise(Total_Delay = sum(Delay, na.rm = TRUE)) %>%
ungroup()
delays_split_two <- delays_split %>%
mutate(across(c('Los Angeles', 'Phoenix', 'San Diego', 'San Francisco', 'Seattle'), as.numeric))
View(delays_split_two)
delays_summary <- delays_split %>%
pivot_longer(cols = c('Los Angeles', 'Phoenix', 'San Diego', 'San Francisco', 'Seattle'),
names_to = "City", values_to = "Delay") %>%
group_by(Airline, Status) %>%
summarise(Total_Delay = sum(Delay, na.rm = TRUE)) %>%
ungroup()
delays_split <- delays_split %>%
mutate(across(c('Los Angeles', 'Phoenix', 'San Diego', 'San Francisco', 'Seattle'), as.numeric))
delays_summary <- delays_split %>%
pivot_longer(cols = c('Los Angeles', 'Phoenix', 'San Diego', 'San Francisco', 'Seattle'),
names_to = "City", values_to = "Delay") %>%
group_by(Airline, Status) %>%
summarise(Total_Delay = sum(Delay, na.rm = TRUE)) %>%
ungroup()
View(delays_summary)
delays_analysis <- delays_split %>%
pivot_longer(cols = c('Los Angeles', 'Phoenix', 'San Diego', 'San Francisco', 'Seattle'),
names_to = "city", values_to = "count")
delays_analysis %>%
group_by(Airline, city) %>%
mutate(total_flights = sum(count)) %>%
ungroup() %>%
mutate(percent = (Count / total_flights) * 100) %>%
select(airline, city, Status, percent)
delays_analysis <- delays_split %>%
pivot_longer(cols = c('Los Angeles', 'Phoenix', 'San Diego', 'San Francisco', 'Seattle'),
names_to = "city", values_to = "count")
delays_analysis %>%
group_by(Airline, city) %>%
mutate(total_flights = sum(count)) %>%
ungroup() %>%
mutate(percent = (count / total_flights) * 100) %>%
select(airline, city, Status, percent)
delays_analysis <- delays_split %>%
pivot_longer(cols = c('Los Angeles', 'Phoenix', 'San Diego', 'San Francisco', 'Seattle'),
names_to = "city", values_to = "count")
delays_analysis %>%
group_by(Airline, city) %>%
mutate(total_flights = sum(count)) %>%
ungroup() %>%
mutate(percent = (count / total_flights) * 100) %>%
select(Airline, city, Status, percent)
View(delays_analysis)
delays_analysis <- delays_split %>%
pivot_longer(cols = c('Los Angeles', 'Phoenix', 'San Diego', 'San Francisco', 'Seattle'),
names_to = "city", values_to = "count")
delays_city <- delays_analysis %>%
group_by(Airline, city) %>%
mutate(total_flights = sum(count)) %>%
ungroup() %>%
mutate(percent = (count / total_flights) * 100) %>%
select(Airline, city, Status, percent)
print(delays_city)
View(delays_city)
library(ggplot2)
ggplot(delays_percent, aes(x = City, y = Percent, fill = Status)) +
geom_bar(stat = "identity", position = "dodge") +  # Grouped bar chart
facet_wrap(~ Airline) +  # Create separate plots for each airline
labs(title = "Percentage of On-time and Delayed Flights by City",
x = "City", y = "Percentage (%)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(delays_analysis)
delays_analysis <- delays_split %>%
pivot_longer(cols = c('Los Angeles', 'Phoenix', 'San Diego', 'San Francisco', 'Seattle'),
names_to = "city", values_to = "flights")
delays_city <- delays_analysis %>%
group_by(Airline, city) %>%
mutate(total_flights = sum(flights)) %>%
ungroup() %>%
mutate(ontime_percent = (flights / total_flights) * 100) %>%
select(Airline, city, Status, ontime_percent)
View(delays_city)
ggplot(delays_city, aes(x = city, y = ontime_percent, fill = Status)) +
geom_bar(stat = "identity", position = "dodge") +  # Grouped bar chart
facet_wrap(~ Airline) +
labs(title = "Percent on-time and delayed flights by city",
x = "City", y = "Percent") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(delays_analysis)
View(delays_split)
View(delays_city)
# Define custom color palettes for the airlines
airline_colors <- c("ALASKA" = "skyblue", "AM WEST" = "pink")  # You can customize these colors
# Create the stacked bar plot
ggplot(delays_percent, aes(x = City, y = Percent, fill = Status)) +
geom_bar(stat = "identity", position = "stack") +  # Stacked bar chart for on-time and delayed
facet_grid(~ Airline, scales = "free_x", space = "free_x") +  # Group bars by city and airline
scale_fill_manual(values = airline_colors) +  # Apply the color palette to airlines
labs(title = "Percentage of On-time and Delayed Flights by City and Airline",
x = "City", y = "Percentage (%)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
airline_colors <- c("ALASKA" = "skyblue", "AM WEST" = "pink")  # You can customize these colors
ggplot(delays_city, aes(x = city, y = ontime_percent, fill = Status)) +
geom_bar(stat = "identity", position = "stack") +
facet_grid(~ Airline, scales = "free_x", space = "free_x") +
scale_fill_manual(values = airline_colors) +
labs(title = "Percent On-time and delayed flights by city and airline",
x = "City", y = "Percent") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
airline_colors <- c("ALASKA" = "#1f78b4", "AM WEST" = "#33a02c")  # You can customize these colors
ggplot(delays_city, aes(x = city, y = ontime_percent, fill = Status)) +
geom_bar(stat = "identity", position = "stack") +
facet_grid(~ Airline, scales = "free_x", space = "free_x") +
scale_fill_manual(values = airline_colors) +
labs(title = "Percent On-time and delayed flights by city and airline",
x = "City", y = "Percent") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
airline_colors <- c("ALASKA" = "#1f78b4", "AM WEST" = "#33a02c")
ggplot(delays_city, aes(x = city, y = ontime_percent, fill = Status)) +
geom_bar(stat = "identity", position = "stack") +
facet_grid(~ Airline, scales = "free_x", space = "free_x") +
scale_fill_manual(values = airline_colors) +
labs(title = "Percent On-time and delayed flights by city and airline",
x = "City", y = "Percent") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
status_colors <- c("on time" = "#1f78b4", "delayed" = "#33a02c")
# Create the plot with colors for on-time and delayed flights
ggplot(delays_percent, aes(x = City, y = Percent, fill = Status)) +
geom_bar(stat = "identity", position = "stack") +
facet_grid(~ Airline, scales = "free_x", space = "free_x") +  # Group by airline
scale_fill_manual(values = status_colors) +  # Use status-specific colors
labs(title = "Percent On-time and Delayed Flights by City and Airline",
x = "City", y = "Percent") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
status_colors <- c("on time" = "#1f78b4", "delayed" = "#33a02c")
# Create the plot with colors for on-time and delayed flights
ggplot(delays_city, aes(x = City, y = Percent, fill = Status)) +
geom_bar(stat = "identity", position = "stack") +
facet_grid(~ Airline, scales = "free_x", space = "free_x") +  # Group by airline
scale_fill_manual(values = status_colors) +  # Use status-specific colors
labs(title = "Percent On-time and Delayed Flights by City and Airline",
x = "City", y = "Percent") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
status_colors <- c("on time" = "#1f78b4", "delayed" = "#33a02c")
# Create the plot with colors for on-time and delayed flights
ggplot(delays_city, aes(x = city, y = ontime_percent, fill = Status)) +
geom_bar(stat = "identity", position = "stack") +
facet_grid(~ Airline, scales = "free_x", space = "free_x") +  # Group by airline
scale_fill_manual(values = status_colors) +  # Use status-specific colors
labs(title = "Percent On-time and Delayed Flights by City and Airline",
x = "City", y = "Percent") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
install.packages("dplyr")
library(dplyr)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(ggplot2)
delays_csv <- "https://storage.googleapis.com/data_science_masters_files/2024_fall/data_607_data_management/week_five_files/flight_delays.csv"
delays_csv_raw <- read_csv(delays_csv)
delays_split <- delays_csv_raw %>%
separate(col = 'Airline,Status,Los Angeles,Phoenix,San Diego,San Francisco,Seattle', into = c('Airline','Status','Los Angeles','Phoenix','San Diego','San Francisco','Seattle'), sep = ",")
View(delays_csv_raw)
