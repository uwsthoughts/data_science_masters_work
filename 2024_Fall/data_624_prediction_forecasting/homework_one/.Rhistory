defaultSummary()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(elasticnet)
library(caret)
library(lars)
library(pls)
library(stats)
library(corrplot)
library(MASS)
library(skimr)
library(DataExplorer)
library(cowplot)
library(glmnet)
library(AppliedPredictiveModeling)
data(permeability)
nzv_fingers <- preProcess(fingerprints, method = c("nzv")) |>
predict(fingerprints)
prem_predict <- ncol(nzv_fingers)
prem_predict
nzv_perm_s <- cbind(nzv_fingers, permeability)
nzv_perm <- preProcess(nzv_perm_s, method = c("BoxCox", "center", "scale", "knnImpute")) |>
predict(nzv_perm_s)
part <- createDataPartition(nzv_perm[permeability], p = 0.75, list = FALSE)
nzv_perm_train <- nzv_perm[part,]
nzv_perm_test <- nzv_perm[-part,]
pls_control <- trainControl(method = "LOOCV")
pls_train <- train(permeability ~ .,
data = nzv_perm_train,
method = "pls",
tuneLength = 20,
trControl = pls_control)
pls_train
opt_lat_vars <- pls_train$bestTune$ncomp
rs_r2 <- max(pls_train$results$Rsquared)
cat("There are ", opt_lat_vars, " optimal latent variables and the corresponding resampled estimate of R2 is ",  rs_r2)
predict(pls_train, nzv_perm_test) %>%
data.frame(pred = .,obs = nzv_perm_test[,"permeability"]) %>%
defaultSummary()
robust_controller <- trainControl(method = "LOOCV")
robust_lines <- train(permeability ~ .,
data = nzv_perm_train,
method = "rlm",
trControl = robust_controller,
preProcess = "pca")
robust_lines
predict(robust_lines, nzv_perm_test) %>%
data.frame(pred = .,obs = nzv_perm_test[,"permeability"]) %>%
defaultSummary()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(elasticnet)
library(caret)
library(lars)
library(pls)
library(stats)
library(corrplot)
library(MASS)
library(skimr)
library(DataExplorer)
library(cowplot)
library(glmnet)
library(AppliedPredictiveModeling)
data(permeability)
nzv_fingers <- preProcess(fingerprints, method = c("nzv")) |>
predict(fingerprints)
prem_predict <- ncol(nzv_fingers)
prem_predict
nzv_perm_s <- cbind(nzv_fingers, permeability)
nzv_perm <- preProcess(nzv_perm_s, method = c("BoxCox", "center", "scale", "knnImpute")) |>
predict(nzv_perm_s)
part <- createDataPartition(nzv_perm[permeability], p = 0.75, list = FALSE)
nzv_perm_train <- nzv_perm[part,]
nzv_perm_test <- nzv_perm[-part,]
pls_control <- trainControl(method = "LOOCV")
pls_train <- train(permeability ~ .,
data = nzv_perm_train,
method = "pls",
tuneLength = 20,
trControl = pls_control)
pls_train
opt_lat_vars <- pls_train$bestTune$ncomp
rs_r2 <- max(pls_train$results$Rsquared)
cat("There are ", opt_lat_vars, " optimal latent variables and the corresponding resampled estimate of R2 is ",  rs_r2)
predict(pls_train, nzv_perm_test) %>%
data.frame(pred = .,obs = nzv_perm_test[,"permeability"]) %>%
defaultSummary()
robust_controller <- trainControl(method = "LOOCV")
robust_lines <- train(permeability ~ .,
data = nzv_perm_train,
method = "rlm",
trControl = robust_controller,
preProcess = "pca",
maxit = 50
)
robust_lines
predict(robust_lines, nzv_perm_test) %>%
data.frame(pred = .,obs = nzv_perm_test[,"permeability"]) %>%
defaultSummary()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(elasticnet)
library(caret)
library(lars)
library(pls)
library(stats)
library(corrplot)
library(MASS)
library(skimr)
library(DataExplorer)
library(cowplot)
library(glmnet)
library(AppliedPredictiveModeling)
data(permeability)
nzv_fingers <- preProcess(fingerprints, method = c("nzv")) |>
predict(fingerprints)
prem_predict <- ncol(nzv_fingers)
prem_predict
nzv_perm_s <- cbind(nzv_fingers, permeability)
nzv_perm <- preProcess(nzv_perm_s, method = c("BoxCox", "center", "scale", "knnImpute")) |>
predict(nzv_perm_s)
part <- createDataPartition(nzv_perm[permeability], p = 0.75, list = FALSE)
nzv_perm_train <- nzv_perm[part,]
nzv_perm_test <- nzv_perm[-part,]
pls_control <- trainControl(method = "LOOCV")
pls_train <- train(permeability ~ .,
data = nzv_perm_train,
method = "pls",
tuneLength = 20,
trControl = pls_control)
pls_train
opt_lat_vars <- pls_train$bestTune$ncomp
rs_r2 <- max(pls_train$results$Rsquared)
cat("There are ", opt_lat_vars, " optimal latent variables and the corresponding resampled estimate of R2 is ",  rs_r2)
predict(pls_train, nzv_perm_test) %>%
data.frame(pred = .,obs = nzv_perm_test[,"permeability"]) %>%
defaultSummary()
robust_controller <- trainControl(method = "LOOCV")
robust_lines <- train(permeability ~ .,
data = nzv_perm_train,
method = "rlm",
trControl = robust_controller,
preProcess = c("pca", pcaComp = 10),
maxit = 50,
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(elasticnet)
library(caret)
library(lars)
library(pls)
library(stats)
library(corrplot)
library(MASS)
library(skimr)
library(DataExplorer)
library(cowplot)
library(glmnet)
library(AppliedPredictiveModeling)
data(permeability)
nzv_fingers <- preProcess(fingerprints, method = c("nzv")) |>
predict(fingerprints)
prem_predict <- ncol(nzv_fingers)
prem_predict
nzv_perm_s <- cbind(nzv_fingers, permeability)
nzv_perm <- preProcess(nzv_perm_s, method = c("BoxCox", "center", "scale", "knnImpute")) |>
predict(nzv_perm_s)
part <- createDataPartition(nzv_perm[permeability], p = 0.75, list = FALSE)
nzv_perm_train <- nzv_perm[part,]
nzv_perm_test <- nzv_perm[-part,]
pls_control <- trainControl(method = "LOOCV")
pls_train <- train(permeability ~ .,
data = nzv_perm_train,
method = "pls",
tuneLength = 20,
trControl = pls_control)
pls_train
opt_lat_vars <- pls_train$bestTune$ncomp
rs_r2 <- max(pls_train$results$Rsquared)
cat("There are ", opt_lat_vars, " optimal latent variables and the corresponding resampled estimate of R2 is ",  rs_r2)
predict(pls_train, nzv_perm_test) %>%
data.frame(pred = .,obs = nzv_perm_test[,"permeability"]) %>%
defaultSummary()
robust_controller <- trainControl(method = "LOOCV")
robust_lines <- train(permeability ~ .,
data = nzv_perm_train,
method = "rlm",
trControl = robust_controller,
preProcess = "pca",
maxit = 50,
)
robust_lines <- train(permeability ~ .,
data = nzv_perm_train,
method = "rlm",
trControl = robust_controller,
preProcess = "pca",
maxit = 50,
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(elasticnet)
library(caret)
library(lars)
library(pls)
library(stats)
library(corrplot)
library(MASS)
library(skimr)
library(DataExplorer)
library(cowplot)
library(glmnet)
library(AppliedPredictiveModeling)
data(permeability)
nzv_fingers <- preProcess(fingerprints, method = c("nzv")) |>
predict(fingerprints)
prem_predict <- ncol(nzv_fingers)
prem_predict
nzv_perm_s <- cbind(nzv_fingers, permeability)
nzv_perm <- preProcess(nzv_perm_s, method = c("BoxCox", "center", "scale", "knnImpute")) |>
predict(nzv_perm_s)
part <- createDataPartition(nzv_perm[permeability], p = 0.75, list = FALSE)
nzv_perm_train <- nzv_perm[part,]
nzv_perm_test <- nzv_perm[-part,]
pls_control <- trainControl(method = "LOOCV")
pls_train <- train(permeability ~ .,
data = nzv_perm_train,
method = "pls",
tuneLength = 20,
trControl = pls_control)
pls_train
opt_lat_vars <- pls_train$bestTune$ncomp
rs_r2 <- max(pls_train$results$Rsquared)
cat("There are ", opt_lat_vars, " optimal latent variables and the corresponding resampled estimate of R2 is ",  rs_r2)
predict(pls_train, nzv_perm_test) %>%
data.frame(pred = .,obs = nzv_perm_test[,"permeability"]) %>%
defaultSummary()
robust_controller <- trainControl(method = "LOOCV")
nzv <- nearZeroVar(nzv_perm_train, saveMetrics = TRUE)
nzv_predictors <- rownames(nzv[nzv$zeroVar == TRUE, ])
nzv_perm_train<- nzv_perm_train[, !(colnames(nzv_perm_train) %in% nzv_predictors)]
robust_lines <- train(permeability ~ .,
data = nzv_perm_train,
method = "rlm",
trControl = robust_controller,
preProcess = "pca",
maxit = 50
)
nzv_perm_rl <- cbind(nzv_fingers, permeability)
nzv_perm_lr <- preProcess(nzv_perm_lr, method = c("BoxCox", "center", "scale", "knnImpute")) |>
predict(nzv_perm_lr)
nzv_perm_rl <- cbind(nzv_fingers, permeability)
nzv_perm_lr <- preProcess(nzv_perm_rl, method = c("BoxCox", "center", "scale", "knnImpute")) |>
predict(nzv_perm_lr)
nzv_perm_rl <- cbind(nzv_fingers, permeability)
nzv_perm_lr <- preProcess(nzv_perm_rl, method = c("BoxCox", "center", "scale", "knnImpute")) |>
predict(nzv_perm_rl)
part_lr <- createDataPartition(nzv_perm_rl[permeability], p = 0.75, list = FALSE)
perm_train_rl <- nzv_perm_lr[part_lr,]
perm_test_rl <- nzv_perm_lr[-part_lr,]
control_lr <- trainControl(method = "LOOCV")
robust_lines <- train(permeability ~ .,
data = perm_train_rl,
method = "rlm",
trControl = control_lr,
preProcess = "pca",
)
nzv_perm_rl <- cbind(nzv_fingers, permeability)
nzv_perm_lr <- preProcess(nzv_perm_rl, method = c("BoxCox", "center", "scale", "knnImpute")) |>
predict(nzv_perm_rl)
part_lr <- createDataPartition(nzv_perm_rl[permeability], p = 0.75, list = FALSE)
perm_train_rl <- nzv_perm_lr[part_lr,]
perm_test_rl <- nzv_perm_lr[-part_lr,]
control_lr <- trainControl(method = "LOOCV")
robust_lines <- train(permeability ~ .,
data = perm_train_rl,
method = "rlm",
trControl = control_lr,
preProcess = "pca"
)
robust_lines
predict(robust_lines, perm_test_rl) %>%
data.frame(pred = .,obs = perm_test_rl[,"permeability"]) %>%
defaultSummary()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(elasticnet)
library(caret)
library(lars)
library(pls)
library(stats)
library(corrplot)
library(MASS)
library(skimr)
library(DataExplorer)
library(cowplot)
library(glmnet)
library(AppliedPredictiveModeling)
data(permeability)
nzv_fingers <- preProcess(fingerprints, method = c("nzv")) |>
predict(fingerprints)
prem_predict <- ncol(nzv_fingers)
prem_predict
nzv_perm_s <- cbind(nzv_fingers, permeability)
nzv_perm <- preProcess(nzv_perm_s, method = c("BoxCox", "center", "scale", "knnImpute")) |>
predict(nzv_perm_s)
part <- createDataPartition(nzv_perm[permeability], p = 0.75, list = FALSE)
nzv_perm_train <- nzv_perm[part,]
nzv_perm_test <- nzv_perm[-part,]
pls_control <- trainControl(method = "LOOCV")
pls_train <- train(permeability ~ .,
data = nzv_perm_train,
method = "pls",
tuneLength = 20,
trControl = pls_control)
pls_train
opt_lat_vars <- pls_train$bestTune$ncomp
rs_r2 <- max(pls_train$results$Rsquared)
cat("There are ", opt_lat_vars, " optimal latent variables and the corresponding resampled estimate of R2 is ",  rs_r2)
predict(pls_train, nzv_perm_test) %>%
data.frame(pred = .,obs = nzv_perm_test[,"permeability"]) %>%
defaultSummary()
nzv_perm_rl <- cbind(nzv_fingers, permeability)
nzv_perm_lr <- preProcess(nzv_perm_rl, method = c("BoxCox", "center", "scale", "knnImpute")) |>
predict(nzv_perm_rl)
part_lr <- createDataPartition(nzv_perm_rl[permeability], p = 0.75, list = FALSE)
perm_train_rl <- nzv_perm_lr[part_lr,]
perm_test_rl <- nzv_perm_lr[-part_lr,]
control_lr <- trainControl(method = "LOOCV")
robust_lines <- train(permeability ~ .,
data = perm_train_rl,
method = "rlm",
trControl = control_lr,
preProcess = "pca"
)
robust_lines
predict(robust_lines, perm_test_rl) %>%
data.frame(pred = .,obs = perm_test_rl[,"permeability"]) %>%
defaultSummary()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(elasticnet)
library(caret)
library(lars)
library(pls)
library(stats)
library(corrplot)
library(MASS)
library(skimr)
library(DataExplorer)
library(dplyr)
library(magrittr)
library(robustbase)
library(glmnet)
library(AppliedPredictiveModeling)
data(permeability)
nzv_fingers <- preProcess(fingerprints, method = c("nzv")) |>
predict(fingerprints)
prem_predict <- ncol(nzv_fingers)
prem_predict
nzv_perm_s <- cbind(nzv_fingers, permeability)
nzv_perm <- preProcess(nzv_perm_s, method = c("BoxCox", "center", "scale", "knnImpute")) |>
predict(nzv_perm_s)
part <- createDataPartition(nzv_perm[permeability], p = 0.75, list = FALSE)
nzv_perm_train <- nzv_perm[part,]
nzv_perm_test <- nzv_perm[-part,]
pls_control <- trainControl(method = "LOOCV")
pls_train <- train(permeability ~ .,
data = nzv_perm_train,
method = "pls",
tuneLength = 20,
trControl = pls_control)
pls_train
opt_lat_vars <- pls_train$bestTune$ncomp
rs_r2 <- max(pls_train$results$Rsquared)
cat("There are ", opt_lat_vars, " optimal latent variables and the corresponding resampled estimate of R2 is ",  rs_r2)
predict(pls_train, nzv_perm_test) %>%
data.frame(pred = .,obs = nzv_perm_test[,"permeability"]) %>%
defaultSummary()
nzv_fingers_lr <- preProcess(fingerprints, method = c("nzv")) |>
predict(fingerprints)
nzv_perm_rl <- cbind(nzv_fingers_lr, permeability)
nzv_perm_lr <- preProcess(nzv_perm_rl, method = c("BoxCox", "center", "scale", "knnImpute")) |>
predict(nzv_perm_rl)
part_lr <- createDataPartition(nzv_perm_rl[permeability], p = 0.75, list = FALSE)
perm_train_rl <- nzv_perm_lr[part_lr,]
perm_test_rl <- nzv_perm_lr[-part_lr,]
control_lr <- trainControl(method = "LOOCV")
robust_lines <- train(permeability ~ .,
data = perm_train_rl,
method = "rlm",
trControl = control_lr,
preProcess = "pca"
)
predict(ridge_reg, ridge_test) %>%
data.frame(pred = .,obs = ridge_test$Yield) %>%
defaultSummary()
ridge_control <- trainControl(method = "boot", number = 10)
ridge_roller <- expand.grid(.alpha = 0, .lambda = seq(0, .1, length = 15))
ridge_reg <- train(Yield ~ .,
data = ridge_train,
method = "glmnet",
tuneGrid = ridge_roller,
trControl = ridge_control)
resolve_miss <- preProcess(ChemicalManufacturingProcess, method = c("medianImpute")) |>
predict(ChemicalManufacturingProcess)
data(ChemicalManufacturingProcess)
resolve_miss <- preProcess(ChemicalManufacturingProcess, method = c("medianImpute")) |>
predict(ChemicalManufacturingProcess)
model_tuner <- preProcess(resolve_miss, method = c("center", "scale")) |>
predict(resolve_miss)
ridge_slices <- createDataPartition(model_tuner$Yield, p = 0.75, list = FALSE)
ridge_train <- model_tuner[ridge_slices,]
ridge_test <- model_tuner[-ridge_slices,]
cat("The training set has dimensions of: \n")
dim(ridge_train)
ridge_control <- trainControl(method = "boot", number = 10)
ridge_roller <- expand.grid(.alpha = 0, .lambda = seq(0, .1, length = 15))
ridge_reg <- train(Yield ~ .,
data = ridge_train,
method = "glmnet",
tuneGrid = ridge_roller,
trControl = ridge_control)
ridge_reg
knitr::opts_chunk$set(echo = TRUE, eval=TRUE)
library(tidyverse)
library(elasticnet)
library(caret)
library(lars)
library(pls)
library(stats)
library(corrplot)
library(MASS)
library(skimr)
library(DataExplorer)
library(dplyr)
library(magrittr)
library(robustbase)
library(glmnet)
library(AppliedPredictiveModeling)
data(permeability)
nzv_fingers <- preProcess(fingerprints, method = c("nzv")) |>
predict(fingerprints)
prem_predict <- ncol(nzv_fingers)
prem_predict
nzv_perm_s <- cbind(nzv_fingers, permeability)
nzv_perm <- preProcess(nzv_perm_s, method = c("BoxCox", "center", "scale", "knnImpute")) |>
predict(nzv_perm_s)
part <- createDataPartition(nzv_perm[permeability], p = 0.75, list = FALSE)
nzv_perm_train <- nzv_perm[part,]
nzv_perm_test <- nzv_perm[-part,]
pls_control <- trainControl(method = "LOOCV")
pls_train <- train(permeability ~ .,
data = nzv_perm_train,
method = "pls",
tuneLength = 20,
trControl = pls_control)
pls_train
opt_lat_vars <- pls_train$bestTune$ncomp
rs_r2 <- max(pls_train$results$Rsquared)
cat("There are ", opt_lat_vars, " optimal latent variables and the corresponding resampled estimate of R2 is ",  rs_r2)
predict(pls_train, nzv_perm_test) %>%
data.frame(pred = .,obs = nzv_perm_test[,"permeability"]) %>%
defaultSummary()
nzv_fingers_lr <- preProcess(fingerprints, method = c("nzv")) |>
predict(fingerprints)
nzv_perm_rl <- cbind(nzv_fingers_lr, permeability)
nzv_perm_lr <- preProcess(nzv_perm_rl, method = c("BoxCox", "center", "scale", "knnImpute")) |>
predict(nzv_perm_rl)
part_lr <- createDataPartition(nzv_perm_rl[permeability], p = 0.75, list = FALSE)
perm_train_rl <- nzv_perm_lr[part_lr,]
perm_test_rl <- nzv_perm_lr[-part_lr,]
control_lr <- trainControl(method = "LOOCV")
robust_lines <- train(permeability ~ .,
data = perm_train_rl,
method = "rlm",
trControl = control_lr,
preProcess = "pca"
)
robust_lines
predict(robust_lines, perm_test_rl) %>%
data.frame(pred = .,obs = perm_test_rl[,"permeability"]) %>%
defaultSummary()
ctrl_enet <- trainControl(method = "boot", number = 10)
enet_g <- expand.grid(.lambda = c(0, 0.01, .1), .fraction = seq(.05, 1, length = 20))
enet_reg <- train(permeability ~ .,
data = nzv_perm_train,
method = "enet",
tuneGrid = enet_g,
trControl = ctrl_enet)
enet_reg
predict(enet_reg, nzv_perm_test) %>%
data.frame(pred = .,obs = nzv_perm_test[,"permeability"]) %>%
defaultSummary()
data(ChemicalManufacturingProcess)
resolve_miss <- preProcess(ChemicalManufacturingProcess, method = c("medianImpute")) |>
predict(ChemicalManufacturingProcess)
cat("This distribution of remaining missing values is: \n")
model_tuner <- preProcess(resolve_miss, method = c("center", "scale")) |>
predict(resolve_miss)
ridge_slices <- createDataPartition(model_tuner$Yield, p = 0.75, list = FALSE)
ridge_train <- model_tuner[ridge_slices,]
ridge_test <- model_tuner[-ridge_slices,]
cat("The training set has dimensions of: \n")
dim(ridge_train)
ridge_control <- trainControl(method = "boot", number = 10)
ridge_roller <- expand.grid(.alpha = 0, .lambda = seq(0, .1, length = 15))
ridge_reg <- train(Yield ~ .,
data = ridge_train,
method = "glmnet",
tuneGrid = ridge_roller,
trControl = ridge_control)
ridge_reg
